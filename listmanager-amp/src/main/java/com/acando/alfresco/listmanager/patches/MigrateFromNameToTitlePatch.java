package com.acando.alfresco.listmanager.patches;

import java.util.List;

import org.alfresco.model.ContentModel;
import org.alfresco.repo.admin.patch.AbstractPatch;
import org.alfresco.service.cmr.repository.ChildAssociationRef;
import org.alfresco.service.cmr.repository.NodeRef;
import org.alfresco.service.cmr.repository.StoreRef;
import org.alfresco.service.cmr.search.ResultSet;
import org.alfresco.service.cmr.search.ResultSetRow;
import org.alfresco.service.cmr.search.SearchParameters;
import org.alfresco.service.cmr.search.SearchService;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.acando.alfresco.listmanager.util.Util;

/**
 * 
 * @author erik.billerby@redpill-linpro.com
 * 
 */
public class MigrateFromNameToTitlePatch extends AbstractPatch {
  private static Log log = LogFactory.getLog(MigrateFromNameToTitlePatch.class);

  @Override
  protected String applyInternal() throws Exception {
    String listPath = ("/app:company_home/app:dictionary/cm:Lists");
    StringBuffer query = new StringBuffer();
    query.append("+PATH:\"" + listPath + "//*\"");

    SearchParameters sp = new SearchParameters();
    sp.addStore(StoreRef.STORE_REF_WORKSPACE_SPACESSTORE);
    sp.setLanguage(SearchService.LANGUAGE_LUCENE);
    sp.setQuery(query.toString());

    ResultSet results = null;

    try {
      results = searchService.query(sp);

      for (ResultSetRow row : results) {
        NodeRef nodeRef = row.getNodeRef();
        copyNameToTitle(nodeRef);

      }
    } finally {
      if (results != null) {
        results.close();
      }
    }
    return null;
  }

  private void copyNameToTitle(NodeRef nodeToProcess) {
    String name = (String) nodeService.getProperty(nodeToProcess, ContentModel.PROP_NAME);

    // The new names gets autogenerated as UUID:s, only copy if the name is
    // created in an older version of the listmanager.
    if (!Util.matchesUUID(name)) {
      log.info("We have a matching node, copying name to title for node: " + name);
      nodeService.setProperty(nodeToProcess, ContentModel.PROP_TITLE, (String) nodeService.getProperty(nodeToProcess, ContentModel.PROP_NAME));
    }
    List<ChildAssociationRef> childAssocs = nodeService.getChildAssocs(nodeToProcess);
    for (ChildAssociationRef childAssoc : childAssocs) {
      NodeRef childNode = childAssoc.getChildRef();
      copyNameToTitle(childNode);
    }

  }

 

}
